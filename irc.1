.TH IRC 1
.SH NAME
ircsrv, irc \- internet relay chat client and ui
.SH SYNOPSIS
.B ircsrv
[
.I -e
]
[
.I -c cert
]
[
.I -s service
]
[
.I -p port
]
[
.I -f file
]
[
.I -P pass
]
[
.I -n nickname
]
[
.I -r realname
]
.I server
.br
.B irc
[
.I -S
]
[
.I -c charset
]
[
.I -t victim
]
[
.I -b lines
]
[
.I -n nick
]
[
.I -r file
]
[
.I /srv/serv
[
.I /tmp/file
]]
.SH DESCRIPTION
.I Ircsrv
makes a connection to an irc server and reconnects if the connection
gets broken. It posts a service to /srv and creates (if necessary) an
append mode log file in /tmp.
.PP
The
.I -e
flag enables TLS. If you want to enable TLS you probably want to change
the default TCP port as well, this can be done using the
.I -p
flag. If this flag is not specified the default port (6667) is being
used. The
.I -c
flag allows you to pass a certificate used to authenticate yourself
with NickServ using CertFP. The certificate is presented to the server
upon request. The
.I -s
flag changes the service name in /srv. By default the name is
a concatenation of the username and the string
.I irc
\&. The same naming rules apply to the append mode log file created
in /tmp, however the
.I -f
flag allows you to change the location of this file. If the
.I -P
flag is specified the given password is used to authenticate
with the server. The
.I -n
flag is used to set the nickname, the default nickname is your
username. Besides the
.I -r
flag allows you to change your realname.
.PP
.I Irc
is a client program that makes use of the service provided by
.I ircsrv
and provides a user interface for sending and receiving
messages.
.PP
The command language understood by
.I irc
is as follows
.EX
/h  this message
/H	this message
/m	privmsg #chan/nick message
/M	mode #chan +nt
/j	join [ #chan ]
/p	part [ #chan ]
/q	send parameters raw to the server
/l	list [ #chan ]
/L	names [ #chan ]
/n	nick newnick
/N	notice #chan/nick message
/t	set [ victim ]
/T	topic [ #chan [ newtopic ]]
/W	whois nick
/w	who nick (a shorter whois)
.EE
.PP
The
.I -c
flag sets character set conversion using
.IR tcs (1),
the
.I -r
flag will cause irc to replay the conversation from the raw file supplied as argument without user interaction,
the
.I -b
flag causes the client to display the last n lines of the default target or 
conversations if no target is set. Without any arguments
.I -b
prints the conversation from the very beginning. The flag
.I -S
prevents
.I irc
from enabling scrolling in the window by default. This should be used when run
in acme to prevent an error message. The
.I -t
flag sets the default target to which the messages are
sent by default if a line written to
.I irc
does not begin with /. Irc also prints messages to/from the target exclusively
if one is set. Irc prints only private messages if the target is set to "MSGS",
useful for being notified when a message is sent to your nick without
having to monitor all the status information.
.SH EXAMPLES
To start up ircsrv on a remote cpu server
.EX
cpu -c ircsrv glenda irc.freenode.net
.EE
.PP
To use ircsrv started earlier on a cpu server
.EX
import $cpu /srv
import $cpu /tmp
irc
.EE
.PP
To start/see/continue a conversation with a specific target (can be #chan or nick)
.EX
irc -t \'#plan9\'
irc -t f2f
.EE
.PP
To run irc within acme start irc inside 
"win -e":
.EX
win -e
irc -t f2f
.EE
.SH SOURCE
/sys/src/cmd/ircsrv.c
.br
/sys/src/cmd/irc.c
.SH SEE ALSO
.IR tcs (1),
.IR faces (1),
.IR nedmail (1)
.SH BUGS
Yes.
